/* tslint:disable */
/**
 * This file has been automatically generated by the [capnpc-ts utility](https://github.com/jdiaz5513/capnp-ts).
 */
import * as capnp from "capnp-ts";
import { ObjectSize as __O, Struct as __S } from 'capnp-ts';
import { Map } from "./values.capnp";
export const _capnpFileId = "921d030365beff8c";
export class MetaData extends __S {
    adoptProof(value) { __S.adopt(value, __S.getPointer(0, this)); }
    disownProof() { return __S.disown(this.getProof()); }
    getProof() { return __S.getData(0, this); }
    hasProof() { return !__S.isNull(__S.getPointer(0, this)); }
    initProof(length) { return __S.initData(0, length, this); }
    setProof(value) { __S.copyFrom(value, __S.getPointer(0, this)); }
    adoptSignature(value) { __S.adopt(value, __S.getPointer(1, this)); }
    disownSignature() { return __S.disown(this.getSignature()); }
    getSignature() { return __S.getData(1, this); }
    hasSignature() { return !__S.isNull(__S.getPointer(1, this)); }
    initSignature(length) { return __S.initData(1, length, this); }
    setSignature(value) { __S.copyFrom(value, __S.getPointer(1, this)); }
    getTimestamp() { return __S.getFloat32(0, this); }
    setTimestamp(value) { __S.setFloat32(0, value, this); }
    toString() { return "MetaData_" + super.toString(); }
}
MetaData._capnp = { displayName: "MetaData", id: "a70e205986d03e12", size: new __O(8, 2) };
export class TransactionPayload extends __S {
    adoptSender(value) { __S.adopt(value, __S.getPointer(0, this)); }
    disownSender() { return __S.disown(this.getSender()); }
    getSender() { return __S.getData(0, this); }
    hasSender() { return !__S.isNull(__S.getPointer(0, this)); }
    initSender(length) { return __S.initData(0, length, this); }
    setSender(value) { __S.copyFrom(value, __S.getPointer(0, this)); }
    adoptProcessor(value) { __S.adopt(value, __S.getPointer(1, this)); }
    disownProcessor() { return __S.disown(this.getProcessor()); }
    getProcessor() { return __S.getData(1, this); }
    hasProcessor() { return !__S.isNull(__S.getPointer(1, this)); }
    initProcessor(length) { return __S.initData(1, length, this); }
    setProcessor(value) { __S.copyFrom(value, __S.getPointer(1, this)); }
    getNonce() { return __S.getUint64(0, this); }
    setNonce(value) { __S.setUint64(0, value, this); }
    getStampsSupplied() { return __S.getUint64(8, this); }
    setStampsSupplied(value) { __S.setUint64(8, value, this); }
    getContractName() { return __S.getText(2, this); }
    setContractName(value) { __S.setText(2, value, this); }
    getFunctionName() { return __S.getText(3, this); }
    setFunctionName(value) { __S.setText(3, value, this); }
    adoptKwargs(value) { __S.adopt(value, __S.getPointer(4, this)); }
    disownKwargs() { return __S.disown(this.getKwargs()); }
    getKwargs() { return __S.getStruct(4, Map, this); }
    hasKwargs() { return !__S.isNull(__S.getPointer(4, this)); }
    initKwargs() { return __S.initStructAt(4, Map, this); }
    setKwargs(value) { __S.copyFrom(value, __S.getPointer(4, this)); }
    toString() { return "TransactionPayload_" + super.toString(); }
}
TransactionPayload._capnp = { displayName: "TransactionPayload", id: "9da7e0d2cce0cea1", size: new __O(16, 5) };
export class Transaction extends __S {
    adoptMetadata(value) { __S.adopt(value, __S.getPointer(0, this)); }
    disownMetadata() { return __S.disown(this.getMetadata()); }
    getMetadata() { return __S.getStruct(0, MetaData, this); }
    hasMetadata() { return !__S.isNull(__S.getPointer(0, this)); }
    initMetadata() { return __S.initStructAt(0, MetaData, this); }
    setMetadata(value) { __S.copyFrom(value, __S.getPointer(0, this)); }
    adoptPayload(value) { __S.adopt(value, __S.getPointer(1, this)); }
    disownPayload() { return __S.disown(this.getPayload()); }
    getPayload() { return __S.getStruct(1, TransactionPayload, this); }
    hasPayload() { return !__S.isNull(__S.getPointer(1, this)); }
    initPayload() { return __S.initStructAt(1, TransactionPayload, this); }
    setPayload(value) { __S.copyFrom(value, __S.getPointer(1, this)); }
    toString() { return "Transaction_" + super.toString(); }
}
Transaction._capnp = { displayName: "Transaction", id: "f784dfdeb15a3120", size: new __O(0, 2) };
export class TransactionData extends __S {
    adoptTransaction(value) { __S.adopt(value, __S.getPointer(0, this)); }
    disownTransaction() { return __S.disown(this.getTransaction()); }
    getTransaction() { return __S.getStruct(0, Transaction, this); }
    hasTransaction() { return !__S.isNull(__S.getPointer(0, this)); }
    initTransaction() { return __S.initStructAt(0, Transaction, this); }
    setTransaction(value) { __S.copyFrom(value, __S.getPointer(0, this)); }
    getStatus() { return __S.getUint8(0, this); }
    setStatus(value) { __S.setUint8(0, value, this); }
    adoptState(value) { __S.adopt(value, __S.getPointer(1, this)); }
    disownState() { return __S.disown(this.getState()); }
    getState() { return __S.getData(1, this); }
    hasState() { return !__S.isNull(__S.getPointer(1, this)); }
    initState(length) { return __S.initData(1, length, this); }
    setState(value) { __S.copyFrom(value, __S.getPointer(1, this)); }
    getStampsUsed() { return __S.getUint64(8, this); }
    setStampsUsed(value) { __S.setUint64(8, value, this); }
    toString() { return "TransactionData_" + super.toString(); }
}
TransactionData._capnp = { displayName: "TransactionData", id: "a2d62360f4be217c", size: new __O(16, 2) };
export class Transactions extends __S {
    adoptTransactions(value) { __S.adopt(value, __S.getPointer(0, this)); }
    disownTransactions() { return __S.disown(this.getTransactions()); }
    getTransactions() { return __S.getList(0, Transactions._Transactions, this); }
    hasTransactions() { return !__S.isNull(__S.getPointer(0, this)); }
    initTransactions(length) { return __S.initList(0, Transactions._Transactions, length, this); }
    setTransactions(value) { __S.copyFrom(value, __S.getPointer(0, this)); }
    toString() { return "Transactions_" + super.toString(); }
}
Transactions._capnp = { displayName: "Transactions", id: "bbfe7f501da387e9", size: new __O(0, 1) };
export class TransactionBatch extends __S {
    adoptTransactions(value) { __S.adopt(value, __S.getPointer(0, this)); }
    disownTransactions() { return __S.disown(this.getTransactions()); }
    getTransactions() { return __S.getList(0, TransactionBatch._Transactions, this); }
    hasTransactions() { return !__S.isNull(__S.getPointer(0, this)); }
    initTransactions(length) { return __S.initList(0, TransactionBatch._Transactions, length, this); }
    setTransactions(value) { __S.copyFrom(value, __S.getPointer(0, this)); }
    getTimestamp() { return __S.getFloat64(0, this); }
    setTimestamp(value) { __S.setFloat64(0, value, this); }
    adoptSignature(value) { __S.adopt(value, __S.getPointer(1, this)); }
    disownSignature() { return __S.disown(this.getSignature()); }
    getSignature() { return __S.getData(1, this); }
    hasSignature() { return !__S.isNull(__S.getPointer(1, this)); }
    initSignature(length) { return __S.initData(1, length, this); }
    setSignature(value) { __S.copyFrom(value, __S.getPointer(1, this)); }
    adoptSender(value) { __S.adopt(value, __S.getPointer(2, this)); }
    disownSender() { return __S.disown(this.getSender()); }
    getSender() { return __S.getData(2, this); }
    hasSender() { return !__S.isNull(__S.getPointer(2, this)); }
    initSender(length) { return __S.initData(2, length, this); }
    setSender(value) { __S.copyFrom(value, __S.getPointer(2, this)); }
    adoptInputHash(value) { __S.adopt(value, __S.getPointer(3, this)); }
    disownInputHash() { return __S.disown(this.getInputHash()); }
    getInputHash() { return __S.getData(3, this); }
    hasInputHash() { return !__S.isNull(__S.getPointer(3, this)); }
    initInputHash(length) { return __S.initData(3, length, this); }
    setInputHash(value) { __S.copyFrom(value, __S.getPointer(3, this)); }
    toString() { return "TransactionBatch_" + super.toString(); }
}
TransactionBatch._capnp = { displayName: "TransactionBatch", id: "b7fe07c9f4fa8a5b", size: new __O(8, 4) };
Transactions._Transactions = capnp.CompositeList(Transaction);
TransactionBatch._Transactions = capnp.CompositeList(Transaction);
